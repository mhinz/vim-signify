*signify.txt*                                      Seeing changes like a boss.
*signify*

                                              ___
                    __                  __  /'___\
               ____/\_\     __     ___ /\_\/\ \__/  __  __
              /',__\/\ \  /'_ `\ /' _ `\/\ \ \ ,__\/\ \/\ \
             /\__, `\ \ \/\ \L\ \/\ \/\ \ \ \ \ \_/\ \ \_\ \
             \/\____/\ \_\ \____ \ \_\ \_\ \_\ \_\  \/`____ \
              \/___/  \/_/\/___L\ \/_/\/_/\/_/\/_/   `/___/> \
                            /\____/                     /\___/
                            \_/__/                      \/__/



                              Reference Manual


==============================================================================
CONTENTS                                                    *signify-contents*

    1.Intro..........................................|signify-intro|
    2.Usage..........................................|signify-usage|
    3.Options........................................|signify-options|
    4.Commands.. ....................................|signify-commands|
    5.Author.........................................|signify-author|
    6.Credits........................................|signify-credits|
    7.License........................................|signify-license|


==============================================================================
1. Intro                                                       *signify-intro*

Signify, or just sy for short, is an quite unobtrusive plugin. If there is
information about changes (in form of patch hunks) since the last commit, they
will be shown on the left side in Vim's sign column.

Easy-peasy!


==============================================================================
2. Usage                                                       *signify-usage*

The usage is pretty straight-forward. By default you should only notice a
difference, if you're working in a directory that is managed by a supported
version control system:

    - git
    - mercurial
    - bzr
    - subversion
    - cvs

The plugin defines 3 new kinds of signs and their corresponding highlighting
classes. It tries to inherent existing colors from the LineNr class, if that
fails, it sets its own colors. In case you don't like these colors, you can
change them easily through variables.


==============================================================================
3. Options                                                   *signify-options*

Just put these variables into your vimrc. The shown assignments are only
examples, not default 


    let g:signify_sign_overwrite = 1

Overwrite signs set by other plugins by default.


    let g:signify_mapping_next_hunk = '<leader>gn'
    let g:signify_mapping_prev_hunk = '<leader>gp'

Mapping for jumping to the next or previous hunk.


    let g:signify_mapping_toggle_highlight = '<leader>gh'

Mapping for toggling line highlighting for lines containing changes.


    let g:signify_mapping_toggle = '<leader>gt'

Mapping for toggling the plugin for the current buffer only.


    let g:signify_sign_add    = '+'
    let g:signify_sign_delete = '-'
    let g:signify_sign_change = '*'

The sign to use if a line was added, deleted or changed.


    let g:signify_exceptions_filetype = [ 'vim', 'c' ]
    let g:signify_exceptions_filename = [ '.vimrc' ]

Don't active the plugin for these filetypes and/or filenames.


    let g:signify_color_sign_guifg_add      = '#00ff00'
    let g:signify_color_sign_guifg_delete   = '#ff0000'
    let g:signify_color_sign_guifg_change   = '#ffff00'
    let g:signify_color_guibg               = '#111111'

    let g:signify_color_sign_ctermfg_add    = 2
    let g:signify_color_sign_ctermfg_delete = 1
    let g:signify_color_sign_ctermfg_change = 3
    let g:signify_color_sign_ctermbg        = 0

The colors of your sign column.

    let g:signify_color_line_highlight_add    = 'DiffAdd'
    let g:signify_color_line_highlight_delete = 'DiffDelete'
    let g:signify_color_line_highlight_change = 'DiffChange'

The highlight classes to use with line highlighting.


==============================================================================
4. Commands                                                 *signify-commands*

    :SignifyToggle

Toggle the plugin for the current buffer only.
Default mapping:  <leader>gt


    :SignifyToggleHighlight

Toggle line highlighting for lines containing changes.
Default mapping:  <leader>gh


    :SignifyJumpToNextHunk

Jump to the next hunk.
Default mapping:  <leader>gn


    :SignifyJumpToPrevHunk

Jump to the previous hunk.  
Default mapping:  <leader>gp


==============================================================================
5. About the author                                           *signify-author*

The author of signify is a lazy bum who somehow enjoys wasting time toying
around with Vim and especially VimL.

My nick on Freenode IRC is mhi^.

For latest developments:

https://github.com/mhinz

Thank you for flying mhi airlines. Get the Vim on!


==============================================================================
6. Credits                                                   *signify-credits*

People who contributed to sy. Format: Person (Github account)


Jeremy Mack     (mutewinter)
Chong Li        (chongli)


==============================================================================
7. Licence                                                   *signify-license*

Distributed under a 3-clause BSD license.


vim: tw=78
